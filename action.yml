name: 'Module Release Locator'
description: 'Locates and processes release source code from GitHub repositories'
author: 'WippyAI'

inputs:
  repository:
    description: 'The repository to locate release from (e.g., wippyai/module-hello)'
    required: true
  tag:
    description: 'The release tag to locate (e.g., v1.0.0)'
    required: true
  token:
    description: 'GitHub token for authentication'
    required: true
  module_id:
    description: 'The UUID of the module to upload to'
    required: true
  username:
    description: 'Username for modules.wippy.ai authentication'
    required: true
  password:
    description: 'Password for modules.wippy.ai authentication'
    required: true

outputs:
  source_code_url:
    description: 'URL of the release source code'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Download source code
      shell: bash
      run: |
        SOURCE_CODE_URL="https://github.com/${{ inputs.repository }}/archive/refs/tags/${{ inputs.tag }}.zip"
        curl -L -H "Authorization: token ${{ inputs.token }}" -o source.zip "$SOURCE_CODE_URL"
        echo "source_code_url=$SOURCE_CODE_URL" >> $GITHUB_OUTPUT
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    - name: Set up upload tool
      shell: bash
      run: |
        # Create a dedicated directory for the upload tool
        mkdir -p .upload-tool
        cd .upload-tool
        
        # Copy the Go code and dependencies from the action's directory
        cp $GITHUB_ACTION_PATH/main.go .
        cp $GITHUB_ACTION_PATH/go.mod .
        cp $GITHUB_ACTION_PATH/go.sum .
        
        # Build the upload tool
        go mod tidy
        go build -o upload-tool
        
        # Debug information
        echo "Debug: Uploading archive for module ID: ${{ inputs.module_id }}"
        echo "Debug: Archive size: $(stat -c %s ../source.zip) bytes"
        echo "Debug: Checking upload-tool location:"
        ls -la upload-tool
        
        # Run the upload tool
        ./upload-tool "${{ inputs.module_id }}" "${{ inputs.tag }}" "../source.zip" "${{ inputs.username }}" "${{ inputs.password }}"
        
        # Check exit code
        if [ $? -ne 0 ]; then
          echo "::error::Failed to upload archive" >&2
          exit 1
        fi
    - name: Cleanup
      shell: bash
      run: |
        rm -f source.zip
        rm -rf .upload-tool 